from django.db import models

# Create your models here.

class Branch(models.Model) :
    BranchID = models.IntegerField(primary_key=True)
    BranchCode= models.CharField(max_length=50)
    BranchName = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)

class Country(models.Model) :
    CountryID = models.IntegerField(primary_key=True)
    CountryCode= models.CharField(max_length=50)
    CountryName = models.CharField(max_length=100)
    TimeZone = models.CharField(max_length=500)
    Remarks = models.CharField(max_length=200)

class State(models.Model) :
    StateID = models.IntegerField(primary_key=True)
    StateCode= models.CharField(max_length=50)
    StateName = models.CharField(max_length=100)
    CountryID =  models.ForeignKey(Country,on_delete=models.DO_NOTHING,null=False)
    Remarks = models.CharField(max_length=200)

class GSTRegistrationType(models.Model) :
    GSTRegistrationTypeID = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    GSTRegistrationTypeName = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)

class Currencies(models.Model) : 
    CurrencyID = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    CountryID =  models.ForeignKey(Country,on_delete=models.DO_NOTHING,null=False)
    CurrencyCode = models.CharField(max_length=50) 
    CurrencyName = models.CharField(max_length=100) 
    CurrencySymbol = models.CharField(max_length=20)  
    SubUnit = models.CharField(max_length=100) 
    SubUnitSymbol = models.CharField(max_length=20) 
    Remarks = models.CharField(max_length=200)

class FinancialYears(models.Model) :
    FinancialYearID = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    DateFrom = models.DateTimeField()
    DateTo = models.DateTimeField()
    FStatus = models.CharField(max_length=20)
    Remarks = models.CharField(max_length=200)

class Users(models.Model) : 
    UserID = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False,default=1)
    CustomerID = models.IntegerField(default=0)
    UserName = models.CharField(max_length=100)
    Password = models.CharField(max_length=100)
    UserTypeCode = models.CharField(max_length=5)
    CreatedDate = models.DateTimeField()
    IsActive = models.BooleanField(default=True) 
    IsAdmin = models.BooleanField(default=False) 

class AccountType(models.Model) :   
    AccountTypeID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    AccountTypeCode = models.CharField(max_length=50)
    AccountTypeName = models.CharField(max_length=100)
    ParentTypeID = models.IntegerField(default=0)
    Remarks = models.CharField(max_length=200)  
    isProtected = models.BooleanField(default=False)

class ChartofAccounts(models.Model) :
    AccountID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    AccountCode = models.CharField(max_length=50)
    AccountName = models.CharField(max_length=100)
    AccountTypeID = models.ForeignKey(AccountType,on_delete=models.DO_NOTHING,null=False)
    Remarks = models.CharField(max_length=200, null=True)  
    isProtected = models.BooleanField(default=False) 

 
class Party(models.Model) :
    PartyID = models.IntegerField(primary_key=True)
    AccountID =  models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    PartyFName = models.CharField(max_length=100)
    PartyLName = models.CharField(max_length=100)
    AccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False)
    PartyCode = models.CharField(max_length=50)
    PartyType = models.CharField(max_length=20)
    DisplayName = models.CharField(max_length=100)
    Address = models.CharField(max_length=200)
    Email = models.CharField(max_length=100)
    Mobile = models.CharField(max_length=20)
    CountryID = models.ForeignKey(Country,on_delete=models.DO_NOTHING,null=False)
    City = models.CharField(max_length=100)
    Phone = models.CharField(max_length=50)
    Fax = models.CharField(max_length=50)
    StateID = models.ForeignKey(State,on_delete=models.DO_NOTHING,null=False)
    PinCode =  models.CharField(max_length=50)
    GSTRegistrationTypeID = models.ForeignKey(GSTRegistrationType,on_delete=models.DO_NOTHING,null=False)
    GSTIN = models.CharField(max_length=20)
    TaxNo = models.CharField(max_length=20)
    PANNo = models.CharField(max_length=20)
    OpeningBalance = models.DecimalField(decimal_places=4,max_digits=20)
    OpeningDate = models.DateTimeField()
    Remarks = models.CharField(max_length=200)


class ItemCategory(models.Model) :
    ItemCategoryID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    ItemCategoryName = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)    

class ItemSubCategory(models.Model) :
    ItemSubCategoryID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    ItemCategoryID  = models.ForeignKey(ItemCategory,on_delete=models.DO_NOTHING,null=False)
    ItemSubCategoryName = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)     
 
class UnitOfMeasures(models.Model) :
    UnitID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    UnitCode = models.CharField(max_length=50)
    UnitName = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)
    
class Warehouse(models.Model) :
    WarehouseID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    WarehouseName = models.CharField(max_length=100)
    WarehouseType = models.CharField(max_length=50)
    Warehouselocation = models.CharField(max_length=100)
    Remarks = models.CharField(max_length=200)
    IsActive = models.BooleanField(default=True)

class TaxCategory(models.Model) :
    TaxCategoryID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    TaxCategoryName = models.CharField(max_length=100)
    SalesVatPerc = models.DecimalField(decimal_places=4,max_digits=20)
    PurchaseVatPerc = models.DecimalField(decimal_places=4,max_digits=20)
    SalesCessPerc = models.DecimalField(decimal_places=4,max_digits=20)
    PurchaseCessPerc = models.DecimalField(decimal_places=4,max_digits=20)
    SalesSGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)  
    PurchaseSGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    SalesCGSTPerc = models.DecimalField(decimal_places=4,max_digits=20) 
    PurchaseCGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    SalesIGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    PurchaseIGSTPerc  = models.DecimalField(decimal_places=4,max_digits=20)
    Remarks = models.CharField(max_length=200)

class Items(models.Model) :
    ItemID   = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    ItemCode = models.CharField(max_length=50)
    ItemName = models.CharField(max_length=100)
    ItemType = models.CharField(max_length=20)
    ItemSubCategoryID = models.ForeignKey(ItemSubCategory,on_delete=models.DO_NOTHING,null=False)
    UnitID = models.ForeignKey(UnitOfMeasures,on_delete=models.DO_NOTHING,null=True)
    TaxCategoryID = models.ForeignKey(TaxCategory,on_delete=models.DO_NOTHING,null=False)
    PurchaseRate = models.DecimalField(decimal_places=4,max_digits=20)
    SalesRate = models.DecimalField(decimal_places=4,max_digits=20)
    HSNCode = models.CharField(max_length=20)
    EAN_SKU = models.CharField(max_length=20)
    OpeningStock = models.DecimalField(decimal_places=4,max_digits=20)
    OpeningDate = models.DateTimeField()
    AccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False)
    MaintainInventory =  models.BooleanField(default=True) 
    ItemURL = models.CharField(max_length=100)
    LastPurchaseRate = models.DecimalField(decimal_places=4,max_digits=20)
    LastPurchaseCost = models.DecimalField(decimal_places=4,max_digits=20)
    AvgRate = models.DecimalField(decimal_places=4,max_digits=20)
    FIFOValue = models.DecimalField(decimal_places=4,max_digits=20)
    Remarks = models.CharField(max_length=200)

class EmployeeDesignation(models.Model) :
    EmployeeDesignationID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    ShortName = models.CharField(max_length=20,null=True)
    Remarks = models.CharField(max_length=200,null=True)
    EmployeeDesignationName = models.CharField(max_length=100)

class Employees(models.Model) :    
    EmployeeID  = models.IntegerField(primary_key=True)
    BranchID =  models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    EmployeeCode = models.CharField(max_length=50)
    Title = models.CharField(max_length=5)
    FirstName = models.CharField(max_length=100) 
    MiddleName = models.CharField(max_length=100) 
    LastName = models.CharField(max_length=100)
    DisplayName = models.CharField(max_length=100)
    GenderName = models.CharField(max_length=10, null=True)
    DateofBirth = models.DateTimeField() 
    Address = models.CharField(max_length=200, null=True)
    Email = models.CharField(max_length=100, null=True)
    Phone = models.CharField(max_length=20, null=True)
    City = models.CharField(max_length=100, null=True)
    AccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False)
    StateID =  models.ForeignKey(State,on_delete=models.DO_NOTHING, null=True) 
    HireDate = models.DateTimeField()
    EmployeeDesignationID =  models.ForeignKey(EmployeeDesignation,on_delete=models.DO_NOTHING,null=False) 
    CountryID =  models.ForeignKey(Country,on_delete=models.DO_NOTHING,null=False)
    PINcode = models.CharField(max_length=20, null=True) 
    BillingRate = models.DecimalField(decimal_places=4,max_digits=20, null=True) 
    BillingType  = models.CharField(max_length=50, null=True)
    Remarks = models.CharField(max_length=200, null=True)

class InvTransactionMaster(models.Model) : 
    InvTransactionMasterID  = models.IntegerField(primary_key=True)
    BranchID = models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    FinancialYearID = models.ForeignKey(FinancialYears,on_delete=models.DO_NOTHING,null=False)
    EmployeeID = models.ForeignKey(Employees,on_delete=models.DO_NOTHING,null=False)
    AccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False)
    VoucherPrefix = models.CharField(max_length=10, null=True) 
    VoucherNumber = models.IntegerField()
    VoucherType = models.CharField(max_length=5) 
    VoucherForm = models.CharField(max_length=10, null=True) 
    TransactionDate = models.DateTimeField() 
    ActionStatus = models.CharField(max_length=5)
    SystemDate = models.DateTimeField() 
    ReferenceNo = models.CharField(max_length=20,null=True)
    ReferenceDate = models.DateTimeField(null=True)
    ShippingAddress = models.CharField(max_length=200,null=True)
    DueDate = models.DateTimeField(null=True)
    DueAmount = models.DecimalField(decimal_places=4,max_digits=20,null=True) 
    TotalGross = models.DecimalField(decimal_places=4,max_digits=20) 
    TotalDiscount = models.DecimalField(decimal_places=4,max_digits=20) 
    BillDiscount = models.DecimalField(decimal_places=4,max_digits=20) 
    TotalTax = models.DecimalField(decimal_places=4,max_digits=20) 
    TotalNetValue = models.DecimalField(decimal_places=4,max_digits=20) 
    TotalNetAmount = models.DecimalField(decimal_places=4,max_digits=20) 
    RoundAmount = models.DecimalField(decimal_places=4,max_digits=20) 
    GrandTotal = models.DecimalField(decimal_places=4,max_digits=20) 
    AdvanceAmount = models.DecimalField(decimal_places=4,max_digits=20)  
    Remarks = models.CharField(max_length=200,null=True)
    OldInvTransactionID = models.IntegerField(default=0) 
    CurrencyID = models.ForeignKey(Currencies,on_delete=models.DO_NOTHING,null=False)
    ExchangeRate =  models.DecimalField(decimal_places=4,max_digits=20,null=True)
    WarehouseID = models.ForeignKey(Warehouse,on_delete=models.DO_NOTHING,null=False)
    IsInvoiced = models.BooleanField(default=False) 
    IsPosted = models.BooleanField(default=False) 
    CashAmt = models.DecimalField(decimal_places=4,max_digits=20)  
    CreditAmt = models.DecimalField(decimal_places=4,max_digits=20)  
    BankAmt = models.DecimalField(decimal_places=4,max_digits=20)  
    IsActive = models.BooleanField(default=True) 
    CreatedUserID = models.ForeignKey(Users,on_delete=models.DO_NOTHING,null=False,related_name='InvCreatedUserID') 
    CreatedDate = models.DateTimeField() 
    ModifiedUserID = models.ForeignKey(Users,on_delete=models.DO_NOTHING,null=False,related_name='InvModifiedUserID')
    ModifiedDate = models.DateTimeField(null=True)    
class InvTransactionDetails(models.Model) :
    InvTransactionDetailID = models.IntegerField(primary_key=True)  
    BranchID = models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    InvTransactionMasterID = models.ForeignKey(InvTransactionMaster,on_delete=models.DO_NOTHING,null=False)
    ItemID = models.ForeignKey(Items,on_delete=models.DO_NOTHING,null=False)
    UnitID = models.ForeignKey(UnitOfMeasures,on_delete=models.DO_NOTHING,null=False)
    Quantity = models.DecimalField(decimal_places=4,max_digits=20)
    Rate = models.DecimalField(decimal_places=4,max_digits=20)
    RateWithTax = models.DecimalField(decimal_places=4,max_digits=20)
    GrossValue = models.DecimalField(decimal_places=4,max_digits=20)
    DiscountPerc = models.DecimalField(decimal_places=4,max_digits=20)
    DiscountAmt = models.DecimalField(decimal_places=4,max_digits=20)
    VatPerc = models.DecimalField(decimal_places=4,max_digits=20)
    VatAmount = models.DecimalField(decimal_places=4,max_digits=20)
    CessPerc = models.DecimalField(decimal_places=4,max_digits=20)
    CessAmount = models.DecimalField(decimal_places=4,max_digits=20)
    SGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    SGSTAmount = models.DecimalField(decimal_places=4,max_digits=20)
    CGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    CGSTAmount = models.DecimalField(decimal_places=4,max_digits=20)
    IGSTPerc = models.DecimalField(decimal_places=4,max_digits=20)
    IGSTAmount = models.DecimalField(decimal_places=4,max_digits=20)
    NetValue = models.DecimalField(decimal_places=4,max_digits=20)
    NetAmount = models.DecimalField(decimal_places=4,max_digits=20)
    QtyIn = models.DecimalField(decimal_places=4,max_digits=20)
    QtyOut = models.DecimalField(decimal_places=4,max_digits=20)
    Remarks = models.CharField(max_length=200)

class AccTransactionMaster(models.Model) :
    AccTransactionMasterID = models.IntegerField(primary_key=True)
    BranchID = models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    FinancialYearID = models.ForeignKey(FinancialYears,on_delete=models.DO_NOTHING,null=False)
    EmployeeID = models.ForeignKey(Employees,on_delete=models.DO_NOTHING,null=False)
    InvTransactionMasterID = models.ForeignKey(InvTransactionMaster,on_delete=models.DO_NOTHING,null=False)
    Particulars = models.CharField(max_length=100) 
    ActionStatus = models.CharField(max_length=5)
    TransactionDate = models.DateTimeField() 
    SystemDate = models.DateTimeField() 
    BankDate = models.DateTimeField() 
    VoucherPrefix = models.CharField(max_length=10)
    VoucherNumber = models.IntegerField()
    VoucherType = models.CharField(max_length=5)
    VoucherForm = models.CharField(max_length=10)
    ReferenceNumber = models.CharField(max_length=20)
    ReferenceDate = models.DateTimeField() 
    DueDate = models.DateTimeField() 
    PaymentMethord = models.CharField(max_length=50)
    TotalDebit = models.DecimalField(decimal_places=4,max_digits=20)
    TotalCredit = models.DecimalField(decimal_places=4,max_digits=20)
    TotDiscount = models.DecimalField(decimal_places=4,max_digits=20)
    CommonNarration = models.CharField(max_length=200)
    OldAccTransactionMasterID = models.IntegerField() 
    IsInvoicePayment = models.BooleanField(default=False) 
    IsActive = models.BooleanField(default=True) 
    CreatedUserID = models.ForeignKey(Users,on_delete=models.DO_NOTHING,null=False,related_name='AccCreatedUserID') 
    CreatedDate = models.DateTimeField() 
    ModifiedUserID = models.ForeignKey(Users,on_delete=models.DO_NOTHING,null=False,related_name='AccModifiedUserID')
    ModifiedDate = models.DateTimeField()

class AccTransactionDetails(models.Model) :
    AccTransactionDetailID = models.IntegerField(primary_key=True)    
    BranchID = models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    AccTransactionMasterID = models.ForeignKey(AccTransactionMaster,on_delete=models.DO_NOTHING,null=False)
    AccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False,related_name='AccDetAccountID')
    RelatedAccountID = models.ForeignKey(ChartofAccounts,on_delete=models.DO_NOTHING,null=False,related_name='AccDetRelatedAccountID')
    Debit = models.DecimalField(decimal_places=4,max_digits=20)
    Credit = models.DecimalField(decimal_places=4,max_digits=20)
    Discount = models.DecimalField(decimal_places=4,max_digits=20)
    IsDisplay = models.BooleanField(default=False) 
    Narration = models.CharField(max_length=200)

class BillwisePaymentDetails(models.Model) :
    BillwisePaymentDetailsID = models.IntegerField(primary_key=True)    
    BranchID = models.ForeignKey(Branch,on_delete=models.DO_NOTHING,null=False)
    VoucherNumber = models.IntegerField()
    VoucherType = models.CharField(max_length=5)
    BillDate = models.DateTimeField() 
    InvTransactionMasterID = models.ForeignKey(InvTransactionMaster,on_delete=models.DO_NOTHING,null=False)
    AccTransactionDetailID = models.ForeignKey(AccTransactionMaster,on_delete=models.DO_NOTHING,null=False)
    Amount = models.DecimalField(decimal_places=4,max_digits=20)
    Remarks = models.CharField(max_length=200)


class ImgUpload(models.Model):
    img=models.FileField(upload_to='Pic/')
    remark=models.CharField(max_length=20)
    




    





  


